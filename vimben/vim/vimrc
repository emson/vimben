
" set paths to pathogen
set runtimepath=$HOME/.vim/vimben/vim/,$HOME/.vim/vimben/vim/core/vim-pathogen,$VIMRUNTIME
call pathogen#infect('$HOME/.vim/vimben/vim/bundle')

" set plugin paths
" let g:snippets_dir = "$HOME/.vim/vimben/vim/snippets"

"" Basic Setup

set nocompatible      " Use vim, no vi defaults
set number            " Show line numbers
set ruler             " Show line and column number
syntax enable         " Turn on syntax highlighting allowing local overrides
set encoding=utf-8    " Set default encoding to UTF-8

" set vim color level
" http://vim.wikia.com/wiki/256_colors_in_vim
set t_Co=256
" set theme and color scheme
syntax enable
set background=dark
colorscheme vibrantink


"" Whitespace

set nowrap                        " don't wrap lines
set tabstop=2                     " a tab is two spaces
set shiftwidth=2                  " an autoindent (with <<) is two spaces
set expandtab                     " use spaces, not tabs
set list                          " Show invisible characters
set backspace=indent,eol,start    " backspace through everything in insert mode


"" required of 'endwise' plugin

filetype on
filetype indent on
filetype plugin on


" " List chars

set listchars=""                  " Reset the listchars
set listchars=tab:\ \             " a tab should display as "  ", trailing whitespace as "."
set listchars+=trail:.            " show trailing spaces as dots
set listchars+=extends:>          " The character to show in the last column when wrap is
                                  " off and the line continues beyond the right of the screen
set listchars+=precedes:<         " The character to show in the last column when wrap is
                                  " off and the line continues beyond the right of the screen


"" Searching

set hlsearch    " highlight matches
set incsearch   " incremental searching
set ignorecase  " searches are case insensitive...
set smartcase   " ... unless they contain at least one capital letter


"" Scrolling
"" Scroll before reaching the edge

set scrolloff=8       " Number of lines from vertical edge to start scrolling
set sidescrolloff=15  " Number of cols from horizontal edge to start scrolling
set sidescroll=1      " Number of cols to scroll at a time


"" Wild settings

"" TODO: Investigate the precise meaning of these settings
"" set wildmode=list:longest,list:full

" Disable output and VCS files
set wildignore+=*.o,*.out,*.obj,.git,*.rbc,*.class,.svn,*.gem

" Disable archive files
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz

" Ignore bundler and sass cache
set wildignore+=vendor/gems/*,vendor/cache/*,.bundle/*,.sass-cache/*

" Disable temp and backup files
set wildignore+=*.swp,*~,._*

" Vim Powerline settings
" set laststatus=2


"" Key Mappings

" remap leader key from '\' to ','
let mapleader = ","
" set timeoutlen=250 " ever notice a slight lag after typing the leader key + command this lowers the timeout

" upper/lower word
nmap <leader>u mQviwU`Q
nmap <leader>l mQviwu`Q

" upper/lower first char of word
nmap <leader>U mQgewvU`Q
nmap <leader>L mQgewvu`Q

" Swap two words
nmap <silent> gw :s/\(\%#\w\+\)\(\_W\+\)\(\w\+\)/\3\2\1/<CR>`'

" Underline the current line with '='
nmap <silent> <leader>ul :t.\|s/./=/g\|:nohls<cr>

" Map the arrow keys to be based on display lines, not physical lines
" map <Down> gj
" map <Up> gk

" Toggle hlsearch with <leader>hs
nmap <leader>hs :set hlsearch! hlsearch?<CR>

" Adjust viewports to the same size
" map <Leader>= <C-w>=

" Remove trailing whitespace
map <Leader>w :%s/\s\+$//g<CR>

" Insert the current directory into a command-line path
"cmap <C-P> <C-R>=expand("%:p:h") . "/"


" File tabs allways visible
set showtabline=2

"  :nmap <C-S-n> :tabprevious<cr>
"  :nmap <C-n> :tabnext<cr>
"  :nmap <C-t> :tabnew<cr>
"  :map <C-t> :tabnew<cr>
"  :map <C-S-n> :tabprevious<cr>
"  :map <C-n> :tabnext<cr>
"  :map <C-q> :tabclose<cr>

" Switch window panes round robin
map <Tab> <C-W><C-W>

" STOP USING ARROW KEYS!!
map <up> <nop>
map <down> <nop>
" map <left> <nop>
" map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

" map arrow keys to previous / next buffer
noremap <left> :bp<CR>
noremap <right> :bn<CR>


if has("autocmd")
  if exists("g:autosave_on_blur")
    au FocusLost * silent! wall
  endif
endif


" Map leader key n to open NERDTree
" map <Leader>n :NERDTreeToggle<CR>


"" Functions

" Some file types should wrap their text
function! s:setupWrapping()
  set wrap
  set linebreak
  set textwidth=72
  set nolist
endfunction


"" File types

" Make sure all mardown files have the correct filetype set and setup wrapping
au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn,txt} setf markdown | call s:setupWrapping()

" Treat JSON files like JavaScript
au BufNewFile,BufRead *.json set ft=javascript

" make Python follow PEP8 ( http://www.python.org/dev/peps/pep-0008/ )
au FileType python set softtabstop=4 tabstop=4 shiftwidth=4 textwidth=79


"" Backup and swap files

set backupdir=~/.vim/_backup//    " where to put backup files.
set directory=~/.vim/_temp//      " where to put swap files.



